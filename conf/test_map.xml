<gmqltest>
    <config>
        <binsizes>
            <binsize>2000</binsize>
            <!--<binsize>5000</binsize>-->
            <!--<binsize>10000</binsize>-->
            <!--<binsize>50000</binsize>-->
            <!--<binsize>100000</binsize>-->
        </binsizes>
    </config>
    <datasets>
        <dataset>
            <name>annotations</name>
            <type>RNASEQ</type>
            <placeholder>#ANN#</placeholder>
            <numfiles>1</numfiles>
            <numchrom>21</numchrom>
            <numregchrom>2000</numregchrom>
            <chromlen>100000</chromlen>
            <minreglen>20</minreglen>
            <maxreglen>500</maxreglen>
            <nummeta>10</nummeta>
            <minval>0.0</minval>
            <maxval>1.0</maxval>
            <namevalues>
                <value>geneA</value>
                <value>geneB</value>
                <value>geneC</value>
            </namevalues>
        </dataset>
        <dataset>
            <name>beds</name>
            <type>BEDSCORE</type>
            <placeholder>#BED#</placeholder>
            <numfiles>10</numfiles>
            <numchrom>21</numchrom>
            <numregchrom>2000</numregchrom>
            <chromlen>100000</chromlen>
            <minreglen>20</minreglen>
            <maxreglen>500</maxreglen>
            <nummeta>10</nummeta>
            <minval>0.0</minval>
            <maxval>1.0</maxval>
        </dataset>
    </datasets>
    <queries>
        <query>
            R = SELECT(NOT(leaveout=="something");parser:RnaSeqParser) #ANN#;
            E = SELECT(NOT(leaveout=="something");parser:BedScoreParser)  #BED#;
            M = MAP() R E;
            MATERIALIZE M into #OUTPUT#;
        </query>
        <query>
            R = SELECT(NOT(leaveout=="something");parser:RnaSeqParser) #ANN#;
            E = SELECT(NOT(leaveout=="something");parser:BedScoreParser)  #BED#;
            M = MAP(JOINBY: antibody) R E;
            MATERIALIZE M into #OUTPUT#;
        </query>
        <query>
            R = SELECT(NOT(leaveout=="something");parser:RnaSeqParser)#ANN#;
            E = SELECT(NOT(leaveout=="something");parser:BedScoreParser)  #BED#;
            M = MAP(JOINBY: antibody,cell) R E;
            MATERIALIZE M into #OUTPUT#;
        </query>
        <query>
            R = SELECT(NOT(leaveout=="something");parser:RnaSeqParser)#ANN#;
            E = SELECT(NOT(leaveout=="something");parser:BedScoreParser)  #BED#;
            M = MAP(maxi AS MAX(score)) R E;
            MATERIALIZE M into #OUTPUT#;
        </query>
        <query>
            R = SELECT(NOT(leaveout=="something");parser:RnaSeqParser) #ANN#;
            E = SELECT(NOT(leaveout=="something");parser:BedScoreParser)  #BED#;
            M = MAP(minzi  AS MIN(score)) R E;
            MATERIALIZE M into #OUTPUT#;
        </query>
        <query>
            R = SELECT(NOT(leaveout=="something");parser:RnaSeqParser) #ANN#;
            E = SELECT(NOT(leaveout=="something");parser:BedScoreParser) #BED#;
            M = MAP(summa AS SUM(score)) R E;
            MATERIALIZE M into #OUTPUT#;
        </query>
        <query>
            R = SELECT(NOT(leaveout=="something");parser:RnaSeqParser) #ANN#;
            E = SELECT(NOT(leaveout=="something");parser:BedScoreParser)  #BED#;
            M = MAP(aggregazione AS AVG(score)) R E;
            MATERIALIZE M into #OUTPUT#;
        </query>
        <query>
            R = SELECT(NOT(leaveout=="something");parser:RnaSeqParser) #ANN#;
            E = SELECT(NOT(leaveout=="something");parser:BedScoreParser)  #BED#;
            M = MAP(bababa AS BAG(score)) R E;
            MATERIALIZE M into #OUTPUT#;
        </query>
        <query>
            R = SELECT(NOT(leaveout=="something");parser:RnaSeqParser) #ANN#;
            E = SELECT(NOT(leaveout=="something");parser:BedScoreParser)  #BED#;
            M = MAP(summa AS SUM(score), minzi AS MIN(score), maxi AS MAX(score)) R E;
            MATERIALIZE M into #OUTPUT#;
        </query>
        <query>
            R = SELECT(NOT(leaveout=="something");parser:RnaSeqParser) #ANN#;
            E = SELECT(NOT(leaveout=="something");parser:BedScoreParser)  #BED#;
            M = MAP(minimum as MIN(score),maximum as MAX(score)) R E;
            MATERIALIZE M into #OUTPUT#;
        </query>
    </queries>
</gmqltest>